{namespace docsYeomanGenerator}

/**
 * This template will be rendered by SoyWeb when the user loads static.soy.
 * It deliberately includes dummy data so the designer can get a feel for how
 * the task list will appear with real data rather with minimal copy and paste.
 */
{template .soyweb}
{call docs.layout}
	{param content kind="html"}
		<h1>Yeoman 生成器</h1>

		<p>
			您可以使用任何您想用的方式组织您的 <strong>Metal.js</strong> 项目，但是刚开始我们建议使用我们创造的 <a href="http://npmjs.com/package/generator-metal">Yeoman 生成器</a>，它为您准备了项目结构和基础的开发工作流程。
		</p>

		<p>使用它：</p>

		<ol>
			<li>
				<p>
					安装 <a href="https://nodejs.org">NPM</a> v3.0.0 或者更新的 （如果您还没有）
				</p>
			</li>
			<li>
				<p>安装 <strong>Yeoman</strong> 和 <strong>generator-metal</strong>：</p>
				<p><code>[sudo] npm i -g yo generator-metal</code></p>
			</li>
			<li>
				<p>
					在您的终端中打开您想用的文件夹，并键入：<code>yo metal</code>
				</p>
			</li>
			<li>
				<p>回答生成器的提示：</p>
				<img src="../images/docs/prompts.png" width="500"><br>
			</li>
			<li><p>等待生成器完成依赖的获取</p></li>
		</ol>

		<p>这些步骤后你会得到一个类似的目录树：</p>

		<textarea class="code" data-mode="javascript">{literal}└── metal-modal
    ├── demos
    │   └── index.html
    ├── node_modules
    ├── package.json
    ├── src
    │   ├── Modal.js
    │   ├── Modal.soy // Only if Soy was chosen
    │   └── modal.scss
    └── test
        └── Modal.js{/literal}</textarea>

		<p>
			<strong>generator-metal</strong> 已经包括了一些 npm 脚本帮助您构建和测试代码，同时也有很多 <a href="/docs/building.html#gulp-metal">gulp-metal</a> 提供了 gulp 任务。
		</p>

		<p>
			顺便说一下，<a href="/docs/#boilerplate">准备开始指南</a> 提供的样板 zip 包就是使用 <strong>generator-metal</strong> 创建的。
		</p>
	{/param}
{/call}
{/template}
