{namespace docsRenderingComponents}

/**
 * This template will be rendered by SoyWeb when the user loads static.soy.
 * It deliberately includes dummy data so the designer can get a feel for how
 * the task list will appear with real data rather with minimal copy and paste.
 */
{template .soyweb}
{call docs.layout}
	{param content kind="html"}
		<h1>渲染组件</h1>

		<p>
			<a href="/docs">快速开始教程</a> 已经解释了如何创建和渲染一个新的组件。
			然而在示例中组件都是被直接追加到文档的body中，但通常需要的是在一个特定的位置呈现。
		</p>

		<h2>替换存在的元素</h2>

		<p>
			如果您希望您的组件替换dom中的现有的元素，你只需要把它(或它的选择器)作为构造函数的 <strong>element</strong> 属性配置，如下：
		</p>

		<textarea class="code" data-mode="javascript">
{literal}// Passsing the element itself
new Modal({element: elementToReplace});

// Passing a selector to the element
new Modal({element: '#elementToReplace'});
{/literal}
		</textarea>

		<h2>指定父级</h2>

		<p>
			您也能通过第二个构造函数参数指定需要接收组件的内容的父级元素，如下：
		</p>

		<textarea class="code" data-mode="javascript">
{literal}// Passsing the element itself
new Modal(data, parentElement);

// Passing a selector to the element
new Modal(data, '#parentElement');
{/literal}
		</textarea>
	{/param}
{/call}
{/template}
