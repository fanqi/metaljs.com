{namespace docsNestedComponents}

/**
 * This template will be rendered by SoyWeb when the user loads static.soy.
 * It deliberately includes dummy data so the designer can get a feel for how
 * the task list will appear with real data rather with minimal copy and paste.
 */
{template .soyweb}
{call docs.layout}
	{param content kind="html"}
		<h1>嵌套组件</h1>

		<p>
			引用组件里面的模板的能力是非常有用的，能够使开发者用一种直接的方式正确地将子组件放置在父组件中对的位置。
		</p>

		<p>
			<strong>Metal.js</strong> 组件当然能这么做。
			例如，我们已经构建了一个被 <strong>Button</strong> 调用的简单组件。
		</p>

		<p>
			现在我们正在构建一个 <strong>模态框</strong> 组件，并且我们想它在页脚渲染一些按钮。
			在 <strong>模态框</strong> 的模板文件我们能这么做：
		</p>

		{call codeTabs.main}
			{param tabs: ['Soy: src/Modal.soy', 'JSX: src/Modal.js'] /}
			{param content kind="html"}
				<textarea class="code" data-mode="x-soy">
{literal}&lt;div class="footer"&gt;
  &lbrace;foreach $button in $buttons&rbrace;
    &lbrace;call Button.render&rbrace;
      &lbrace;param label: $button /&rbrace;
    &lbrace;/call&rbrace;
  &lbrace;/foreach&rbrace;
&lt;/div&gt;{/literal}
				</textarea>
				<textarea class="code hidden" data-mode="javascript">
{literal}var buttons = this.config.buttons.map(button => {
  return &lt;Button label={button} /&gt;;
});
return &lt;div class="footer"&gt;{buttons}&lt;/div&gt;;{/literal}
				</textarea>
			{/param}
		{/call}

		<p>
			当模态框被渲染时，这些按钮也会被渲染在指定的位置。除此之外，<strong>按钮</strong> 组件也会被自动实例化。
		</p>

		<h2>访问子组件实例</h2>

		<p>
			但是我们需要访问已创建的示例呢？使用 <strong>ref</strong> 是可能的。让我来添加一个到之前的例子看看会发生什么：
		</p>

		{call codeTabs.main}
			{param tabs: ['Soy: src/Modal.soy', 'JSX: src/Modal.js'] /}
			{param content kind="html"}
				<textarea class="code" data-mode="x-soy">
{literal}&lbrace;foreach $button as $buttons&rbrace;
  &lbrace;call Button.render&rbrace;
    &lbrace;param label: $button /&rbrace;
    &lbrace;param ref: 'button' + index($button) /&rbrace;
  &lbrace;/call&rbrace;
&lbrace;/foreach&rbrace;{/literal}
				</textarea>
				<textarea class="code hidden" data-mode="javascript">
{literal}var buttons = this.config.buttons.map((button, index) => {
  return &lt;Button label={button} ref={'button' + index} /&gt;;
});{/literal}
				</textarea>
			{/param}
		{/call}

		<p>
			现在您将能够访问您的子组件通过您实例的 <code>components</code> 属性，如下：
		</p>

		<textarea class="code" data-mode="javascript">{literal}
modal.components.button0 // The instance for first button
modal.components.button1 // The instance for second button{/literal}</textarea>
	{/param}
{/call}
{/template}
